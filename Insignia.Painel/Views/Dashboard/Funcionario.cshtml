@model Insignia.Painel.ViewModels.ViewModelDashboardFuncionario
@{
    ViewBag.Title = "Funcionario";
    Layout = "~/Views/Shared/LayoutPrincipal.cshtml";
}
<!-- Foi adicionado manualmente pois no bundle estava dando problema-->
<link href="~/Content/css/fullcalendar/fullcalendar.css" rel="stylesheet">
<link href="~/Content/css/fullcalendar/fullcalendar.print.css" rel="stylesheet" media="print">

<!-- page content -->
<div class="page-title">
    <div class="title_left">
        <h3>Dashboard - @Session["UsuarioNome"]</h3>
    </div>
</div>
<div class="clearfix"></div>
<div class="row">
    <!-- Atividades Recentes -->
    <div class="col-md-6 col-sm-4 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Tarefas Recentes</h2>
                <ul class="nav navbar-right panel_toolbox" style="min-width: 0px;">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="col-md-9 col-sm-9 col-xs-12">
                    <div class="" role="tabpanel" data-example-id="togglable-tabs">
                        <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                            <li role="presentation" class="active">
                                <a href="#tab_content1" id="home-tab" role="tab" data-toggle="tab" aria-expanded="true">Atividades Recentes</a>
                            </li>
                        </ul>
                        <div id="myTabContent" class="tab-content">
                            <div role="tabpanel" class="tab-pane fade active in" id="tab_content1" aria-labelledby="home-tab">
                                <ul class="messages">
                                    @foreach (var item in Model.ListFazer)
                                    {
                                        <li>
                                            @if (!string.IsNullOrEmpty(Model.Usuario.Foto))
                                            {
                                                <!-- Foto do usuário -->
                                                <img class="avatar" src="https://s3-sa-east-1.amazonaws.com/insigniagamify/@Session["EmpresaNome"]/Fotos/@Model.Usuario.Foto" alt="Foto">
                                            }
                                            else
                                            {
                                                <!-- Foto padrão -->
                                                <img class="avatar" src="https://s3-sa-east-1.amazonaws.com/insigniagamify/images/Default.png" alt="Foto">
                                            }
                                            <div class="message_wrapper">
                                                <h4 class="heading">@Model.Usuario.Nome</h4>
                                                <blockquote class="message">
                                                    <a href="@Url.Action("../Tarefas/Editar", null, new { ID = item.ID, controller = "Tarefas" }, Request.Url.Scheme)">@item.Resumo</a>
                                                </blockquote>
                                                <br />
                                                @if (!string.IsNullOrEmpty(item.Anexo))
                                                {
                                                    <!-- Anexo da tarefa -->
                                                    <p class="url">
                                                        <span class="fs1 text-info" aria-hidden="true" data-icon=""></span>
                                                        <a href="https://s3-sa-east-1.amazonaws.com/insigniagamify/@Session["EmpresaNome"]/Arquivos/@item.Anexo" target="_blank">
                                                            <i class="fa fa-paperclip"></i> @item.Anexo
                                                        </a>
                                                    </p>
                                                }
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /Atividades Recentes -->
    <!-- Gráfico Radar -->
    <div class="col-md-6 col-sm-4 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2><i class="fa fa-bars"></i> Gráfico Radar</h2>
                <ul class="nav navbar-right panel_toolbox" style="min-width: 0px;">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div id="echart_sonar" style="height:370px;"></div>
            </div>
        </div>
    </div>
    <!-- /Gráfico Radar -->
    <!-- Agenda -->
    <div class="col-md-12 col-sm-4 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2 id="TituloPagina">Agenda</h2>
                <ul class="nav navbar-right panel_toolbox" style="min-width: 0px;">
                    <li>
                        <span style="vertical-align: -webkit-baseline-middle;">Caso o ícone de sincronização &nbsp;<i class="fa fa-refresh"></i> esteja vermelho, clique nele para sincronizar com Google Calendar, caso esteja verde já está sincronizado.</span>&nbsp;&nbsp;&nbsp;
                    </li>
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a><i class="fa fa-refresh" style="color: @Model.IconeRefreshCor;" title="Sincronizar com Google Agenda" onclick="document.getElementById('VisualizarAgenda').submit();"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            @using (Html.BeginForm("SincronizarAgenda", "Dashboard", FormMethod.Get, new { @class = "form-horizontal form-label-left", id = "VisualizarAgenda" }))
            {
                <div class="x_content">                    
                    <div id='calendar'></div>
                </div>
            }
        </div>
    </div>
    <!-- Agenda -->
</div>
<!-- /page content -->

@Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}\" charset=\"iso-8859-1\"></script>", "~/Competencias/scripts")
@Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}\" charset=\"iso-8859-1\"></script>", "~/Agenda/scripts")
<!-- Height x_Panel -->
<script>
    $(document).ready(function () {
        var x = $('.x_panel')[1];
        var y = $('.x_panel')[0];

        x = x.offsetHeight;

        $(y).css('height', x + 'px');
    });
</script>
<!-- /Height x_Panel -->
<!-- Gráfico Radar -->
<script>
    var theme = {
        color: [
            '#23527c', '#34495E', '#BDC3C7', '#3498DB',
            '#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
        ],

        title: {
            itemGap: 8,
            textStyle: {
                fontWeight: 'normal',
                color: '#23527c'
            }
        },

        dataRange: {
            color: ['#1f610a', '#97b58d']
        },

        toolbox: {
            color: ['#408829', '#408829', '#408829', '#408829']
        },

        tooltip: {
            backgroundColor: 'rgba(0,0,0,0.5)',
            axisPointer: {
                type: 'line',
                lineStyle: {
                    color: '#408829',
                    type: 'dashed'
                },
                crossStyle: {
                    color: '#408829'
                },
                shadowStyle: {
                    color: 'rgba(200,200,200,0.3)'
                }
            }
        },

        dataZoom: {
            dataBackgroundColor: '#eee',
            fillerColor: 'rgba(64,136,41,0.2)',
            handleColor: '#408829'
        },
        grid: {
            borderWidth: 0
        },

        categoryAxis: {
            axisLine: {
                lineStyle: {
                    color: '#408829'
                }
            },
            splitLine: {
                lineStyle: {
                    color: ['#eee']
                }
            }
        },

        valueAxis: {
            axisLine: {
                lineStyle: {
                    color: '#408829'
                }
            },
            splitArea: {
                show: true,
                areaStyle: {
                    color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
                }
            },
            splitLine: {
                lineStyle: {
                    color: ['#eee']
                }
            }
        },
        timeline: {
            lineStyle: {
                color: '#408829'
            },
            controlStyle: {
                normal: { color: '#408829' },
                emphasis: { color: '#408829' }
            }
        },

        k: {
            itemStyle: {
                normal: {
                    color: '#68a54a',
                    color0: '#a9cba2',
                    lineStyle: {
                        width: 1,
                        color: '#408829',
                        color0: '#86b379'
                    }
                }
            }
        },
        map: {
            itemStyle: {
                normal: {
                    areaStyle: {
                        color: '#ddd'
                    },
                    label: {
                        textStyle: {
                            color: '#c12e34'
                        }
                    }
                },
                emphasis: {
                    areaStyle: {
                        color: '#99d2dd'
                    },
                    label: {
                        textStyle: {
                            color: '#c12e34'
                        }
                    }
                }
            }
        },
        force: {
            itemStyle: {
                normal: {
                    linkStyle: {
                        strokeColor: '#408829'
                    }
                }
            }
        },
        chord: {
            padding: 4,
            itemStyle: {
                normal: {
                    lineStyle: {
                        width: 1,
                        color: 'rgba(128, 128, 128, 0.5)'
                    },
                    chordStyle: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        }
                    }
                },
                emphasis: {
                    lineStyle: {
                        width: 1,
                        color: 'rgba(128, 128, 128, 0.5)'
                    },
                    chordStyle: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        }
                    }
                }
            }
        },
        gauge: {
            startAngle: 225,
            endAngle: -45,
            axisLine: {
                show: true,
                lineStyle: {
                    color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
                    width: 8
                }
            },
            axisTick: {
                splitNumber: 10,
                length: 12,
                lineStyle: {
                    color: 'auto'
                }
            },
            axisLabel: {
                textStyle: {
                    color: 'auto'
                }
            },
            splitLine: {
                length: 18,
                lineStyle: {
                    color: 'auto'
                }
            },
            pointer: {
                length: '90%',
                color: 'auto'
            },
            title: {
                textStyle: {
                    color: '#333'
                }
            },
            detail: {
                textStyle: {
                    color: 'auto'
                }
            }
        },
        textStyle: {
            fontFamily: 'Arial, Verdana, sans-serif'
        }
    };

    var echartRadar = echarts.init(document.getElementById('echart_sonar'), theme);

    echartRadar.setOption({
        title: {
            text: 'Competências'
            //subtext: 'Subtitulo'
        },
        tooltip: {
            trigger: 'item'
        },
        legend: {
            orient: 'vertical',
            x: 'right',
            y: 'bottom',
            data: ['Allocated Budget', 'Actual Spending']
        },
        toolbox: {
            show: true,
            feature: {
                restore: {
                    show: false,
                    title: "Atualizar"
                },
                saveAsImage: {
                    show: true,
                    title: "Salvar Imagem"
                }
            }
        },
        polar: [{
            indicator: [
                @foreach (var item in Model.ListCompetencias){
                    @:{
                        @:text: '@Html.Raw(@item.Nome)',
                        @:max: 100
                    @:},
                }
            ]
        }],
        calculable: true,
        series: [{
            name: 'Competências',
            type: 'radar',
            data: [{
                value: [
                    @foreach (var item in Model.ListCompetencias)
                    {
                        @item.Pontos @:,
                    }
                ],
            },
            ]
        }]
    });
</script>
<!-- /Gráfico Radar -->
<!-- FullCalendar -->
<script>
    $(window).load(function () {
        var date = new Date(),
            d = date.getDate(),
            m = date.getMonth(),
            y = date.getFullYear(),
            started,
            categoryClass;

        var calendar = $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            selectable: true,
            selectHelper: true,
            editable: false,
            events: [
                @if (Model.ListAgenda != null)
                {
                    foreach (var item in Model.ListAgenda){
                        @:{
                            @:title: '@Html.Raw(HttpUtility.HtmlDecode(item.Titulo))',
                            @:start: new Date(@item.DataInicio.Year + '-' + @item.DataInicio.Month + '-' + @item.DataInicio.Day),
                            @:backgroundColor : "#2C4257"
                        @:},
                    }
                }
            ]
        });
    });
</script>
<!-- /FullCalendar -->