@model Insignia.Painel.ViewModels.ViewModelCompetencia
@{
    ViewBag.Title = "DistribuirPontos";
    Layout = "~/Views/Shared/LayoutPrincipal.cshtml";
}

<!-- page content -->
<div class="page-title">
</div>
<div class="clearfix"></div>
<div class="row">
    <div class="col-md-6 col-sm-4 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2 id="TituloPagina">Distribuir Pontos</h2>
                <ul class="nav navbar-right panel_toolbox" style="min-width: 0px;">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <p>Você possui um total de <strong>@Model.SaldoPontos</strong> pontos para distribuir em competências</p>
                <div class="table-responsive">
                    <table class="table table-striped jambo_table bulk_action">
                        <thead>
                            <tr class="headings">
                                <th class="column-title">Nome</th>
                                <th class="column-title">Descrição</th>
                                <th class="column-title" style="text-align: center;">Pontos</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ListCompetencias)
                            {
                                <tr class="odd pointer">
                                    <td>@item.Nome</td>
                                    <td>@item.Descricao</td>
                                    <td class="a-right a-right ">
                                        <div style="width: 95%; margin: 0 auto; text-align: center;">
                                            @*<span class="fa fa-arrow-circle-left" style="float: left;"></span>*@
                                            <P style="display: inline-block; margin: 0;" id="@item.ID">@item.Pontos</P>
                                            <span class="fa fa-arrow-circle-right" style="float: right;" onclick="AdicionarPonto('@item.ID')"></span>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-sm-4 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2><i class="fa fa-bars"></i> Gráfico Radar</h2>
                <ul class="nav navbar-right panel_toolbox" style="min-width: 0px;">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">                
                <div id="echart_sonar" style="height:370px;"></div>
            </div>
        </div>
    </div>
</div>
<!-- /page content -->

@Scripts.Render("~/Competencias/scripts")
<!-- Height x_Panel -->
<script>
    $(document).ready(function () {
        var x = $('.x_panel')[1];
        var y = $('.x_panel')[0];

        x = x.offsetHeight;

        $(y).css('height', x + 'px');

    });
</script>
<!-- /Height x_Panel -->
<!-- Gráfico Radar -->
<script>
    var theme = {
        color: [
            '#23527c', '#34495E', '#BDC3C7', '#3498DB',
            '#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
        ],

        title: {
            itemGap: 8,
            textStyle: {
                fontWeight: 'normal',
                color: '#23527c'
            }
        },

        dataRange: {
            color: ['#1f610a', '#97b58d']
        },

        toolbox: {
            color: ['#408829', '#408829', '#408829', '#408829']
        },

        tooltip: {
            backgroundColor: 'rgba(0,0,0,0.5)',
            axisPointer: {
                type: 'line',
                lineStyle: {
                    color: '#408829',
                    type: 'dashed'
                },
                crossStyle: {
                    color: '#408829'
                },
                shadowStyle: {
                    color: 'rgba(200,200,200,0.3)'
                }
            }
        },

        dataZoom: {
            dataBackgroundColor: '#eee',
            fillerColor: 'rgba(64,136,41,0.2)',
            handleColor: '#408829'
        },
        grid: {
            borderWidth: 0
        },

        categoryAxis: {
            axisLine: {
                lineStyle: {
                    color: '#408829'
                }
            },
            splitLine: {
                lineStyle: {
                    color: ['#eee']
                }
            }
        },

        valueAxis: {
            axisLine: {
                lineStyle: {
                    color: '#408829'
                }
            },
            splitArea: {
                show: true,
                areaStyle: {
                    color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
                }
            },
            splitLine: {
                lineStyle: {
                    color: ['#eee']
                }
            }
        },
        timeline: {
            lineStyle: {
                color: '#408829'
            },
            controlStyle: {
                normal: { color: '#408829' },
                emphasis: { color: '#408829' }
            }
        },

        k: {
            itemStyle: {
                normal: {
                    color: '#68a54a',
                    color0: '#a9cba2',
                    lineStyle: {
                        width: 1,
                        color: '#408829',
                        color0: '#86b379'
                    }
                }
            }
        },
        map: {
            itemStyle: {
                normal: {
                    areaStyle: {
                        color: '#ddd'
                    },
                    label: {
                        textStyle: {
                            color: '#c12e34'
                        }
                    }
                },
                emphasis: {
                    areaStyle: {
                        color: '#99d2dd'
                    },
                    label: {
                        textStyle: {
                            color: '#c12e34'
                        }
                    }
                }
            }
        },
        force: {
            itemStyle: {
                normal: {
                    linkStyle: {
                        strokeColor: '#408829'
                    }
                }
            }
        },
        chord: {
            padding: 4,
            itemStyle: {
                normal: {
                    lineStyle: {
                        width: 1,
                        color: 'rgba(128, 128, 128, 0.5)'
                    },
                    chordStyle: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        }
                    }
                },
                emphasis: {
                    lineStyle: {
                        width: 1,
                        color: 'rgba(128, 128, 128, 0.5)'
                    },
                    chordStyle: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        }
                    }
                }
            }
        },
        gauge: {
            startAngle: 225,
            endAngle: -45,
            axisLine: {
                show: true,
                lineStyle: {
                    color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
                    width: 8
                }
            },
            axisTick: {
                splitNumber: 10,
                length: 12,
                lineStyle: {
                    color: 'auto'
                }
            },
            axisLabel: {
                textStyle: {
                    color: 'auto'
                }
            },
            splitLine: {
                length: 18,
                lineStyle: {
                    color: 'auto'
                }
            },
            pointer: {
                length: '90%',
                color: 'auto'
            },
            title: {
                textStyle: {
                    color: '#333'
                }
            },
            detail: {
                textStyle: {
                    color: 'auto'
                }
            }
        },
        textStyle: {
            fontFamily: 'Arial, Verdana, sans-serif'
        }
    };

    var echartRadar = echarts.init(document.getElementById('echart_sonar'), theme);

    echartRadar.setOption({
        title: {
            text: 'Competências'
            //subtext: 'Subtitulo'
        },
        tooltip: {
            trigger: 'item'
        },
        legend: {
            orient: 'vertical',
            x: 'right',
            y: 'bottom',
            data: ['Allocated Budget', 'Actual Spending']
        },
        toolbox: {
            show: true,
            feature: {
                restore: {
                    show: true,
                    title: "Atualizar"
                },
                saveAsImage: {
                    show: true,
                    title: "Salvar Imagem"
                }
            }
        },
        polar: [{
            indicator: [

                @foreach (var item in Model.ListCompetencias){
                    @:{
                        @:text: '@item.Nome',
                        @:max: 100
                    @:},
                }
            ]
        }],
        calculable: true,
        series: [{
            name: 'Competências',
            type: 'radar',
            data: [{
                value: [
                    @foreach (var item in Model.ListCompetencias)
                    {
                        @item.Pontos @:,
                    }
                ],
            },
            ]
        }]
    });
</script>
<!-- /Gráfico Radar -->
<!-- AdicionarPonto -->
<script>
    function AdicionarPonto(competenciaID) {
        if (competenciaID != '') {
            if ($("strong").text() > 0) {

                pontos = Number($("#" + competenciaID).text()) + 1;
                saldo = Number($("strong").text()) - 1;

                $.ajax({
                    type: 'POST',
                    url: 'AdicionarPontos',
                    dataType: 'text',
                    async: true,
                    data: {
                        'ID': competenciaID, 'Pontos': pontos, 'Saldo': saldo
                    },
                    success: function (Dado) {
                        if (Dado == "True") {
                            $("strong").text(saldo);
                            $("#" + competenciaID).text(pontos);
                        }
                        else {
                            alert('Ocorreu um erro ao tentar ditribuir pontos na competência desejada, contate o administrador do sistema.');
                        }
                    },
                    error: function (Dado) {
                        console.log(Dado);
                    }
                });
            }
            else {
                alert('saldo insuficiente');
            }
        }
        //$("strong").text("what ever you want");
    }
</script>
<!-- /AdicionarPonto -->